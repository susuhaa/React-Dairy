{"ast":null,"code":"var _jsxFileName = \"/Users/soo/Desktop/6\\u110B\\u116F\\u11AF 14\\u110B\\u1175\\u11AF/React_practice/Github/simpledairy/src/Lifecycle.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lifecycle = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState(\"\");\n  useEffect(() => {\n    console.log(\"Mount!\");\n  }, []);\n\n  // 컴퍼넌트가 업데이트 되는 순간에 하고싶은 일은 useEffect를 쓰면 된다.\n  useEffect(() => {\n    console.log(\"update!\");\n  });\n  useEffect(() => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [count, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 1),\n        children: \" +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 8\n  }, this);\n};\n_s(Lifecycle, \"y6VfKetZlGi4gCS7DA81E+Ajnw4=\");\n_c = Lifecycle;\nexport default Lifecycle;\nvar _c;\n$RefreshReg$(_c, \"Lifecycle\");","map":{"version":3,"names":["React","useEffect","useState","Lifecycle","count","setCount","text","setText","console","log","padding","e","target","value"],"sources":["/Users/soo/Desktop/6월 14일/React_practice/Github/simpledairy/src/Lifecycle.js"],"sourcesContent":["import React,{useEffect, useState} from 'react';\n\nconst Lifecycle = () => {\n   \nconst [count,setCount] = useState(0);\nconst [text,setText] = useState(\"\");\n\nuseEffect(() => {\nconsole.log(\"Mount!\");\n}, []);\n\n// 컴퍼넌트가 업데이트 되는 순간에 하고싶은 일은 useEffect를 쓰면 된다.\nuseEffect(() => {\n    console.log(\"update!\");\n});\n\nuseEffect(() => {})\n\nreturn <div style={{ padding: 20 }}>\n   <div>\n    {count}\n    <button onClick = {() => setCount(count +1)}> +</button>\n   </div>\n<div>\n    <input value = {text} onChange = {(e) => setText(e.target.value)} />\n    \n</div>\n\n</div>;\n\n\n    \n};\n\nexport default Lifecycle;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC;AAEhD,MAAMC,SAAS,GAAG,MAAM;EAAA;EAExB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACpC,MAAM,CAACI,IAAI,EAACC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEnCD,SAAS,CAAC,MAAM;IAChBO,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAR,SAAS,CAAC,MAAM;IACZO,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;EAC1B,CAAC,CAAC;EAEFR,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;EAEnB,oBAAO;IAAK,KAAK,EAAE;MAAES,OAAO,EAAE;IAAG,CAAE;IAAA,wBAChC;MAAA,WACEN,KAAK,eACN;QAAQ,OAAO,EAAI,MAAMC,QAAQ,CAACD,KAAK,GAAE,CAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QACnD,eACT;MAAA,uBACI;QAAO,KAAK,EAAIE,IAAK;QAAC,QAAQ,EAAKK,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAElE;EAAA;IAAA;IAAA;IAAA;EAAA,QAEA;AAIN,CAAC;AAAC,GA9BIV,SAAS;AAAA,KAATA,SAAS;AAgCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}